{"version":3,"sources":["./src/app/login-screen/login-screen.module.ts","./src/app/login-screen/login-screen.routing.module.ts","./src/app/login-screen/login/login.component.ts","./src/app/login-screen/login/login.component.html"],"names":[],"mappings":"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","file":"login-screen-login-screen-module.js","sourcesContent":["import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LoginScreenRoutingModule } from './login-screen.routing.module';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule, MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { CustomerCarePortalRoutingModule } from '../customer-care-portal/customer-care-portal.routing.module';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, ForgotPasswordComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    NgSelectModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    LoginScreenRoutingModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n\r\n})\r\nexport class LoginScreenModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:LoginComponent\r\n      },\r\n      \r\n    ]\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginScreenRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/core/auth/auth.service';\r\nimport { PackageDetailsService } from 'src/app/customer-care-portal/manage-subscription/package-details/package-details.service';\r\nimport { StatusDTO } from 'src/app/shared/Models/Models';\r\nimport { StepCompletionStatusComponent } from 'src/app/shared/step-completion-status/step-completion-status.component';\r\nimport { Login } from './login.model';\r\nimport { LoginService } from './login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(\r\n    public loginService: LoginService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private authService: AuthService,\r\n    private packageDetailService: PackageDetailsService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isUserLoggedIn();\r\n    this.initForm();\r\n  }\r\n\r\n  private isUserLoggedIn() {\r\n    const s_id = localStorage.getItem(\"session_id\");\r\n    if (s_id && s_id.length > 0) {\r\n      this.router.navigate([\"CustomerPortal/manage-subscription\"]);\r\n    }\r\n    // else user has to login again\r\n  }\r\n  private initForm() {\r\n    this.loginForm = new FormGroup({\r\n      'user_id': new FormControl(null, Validators.required),\r\n      'password': new FormControl(null, Validators.required)\r\n    });\r\n  }\r\n\r\n  checkFormValidation() {\r\n\r\n    if (!this.loginForm.get('user_id')?.valid && this.loginForm.get('user_id')?.touched) {\r\n      return true;\r\n    }\r\n\r\n    if (!this.loginForm.get('password')?.valid && this.loginForm.get('password')?.touched) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.loginForm);\r\n    const loginModel: Login = {} as Login;\r\n    loginModel.user_id = this.loginForm.controls.user_id.value;\r\n    loginModel.password = this.loginForm.controls.password.value;\r\n\r\n    if (this.loginForm.valid) {\r\n      this.loginService.Post(loginModel).subscribe((result) => {\r\n        if (result && result.errorCode === 0 && result.errorMessage === \"OK\") {\r\n          localStorage.setItem(\"user_id\", loginModel.user_id);\r\n          localStorage.setItem(\"session_id\", result.session_id);\r\n          localStorage.setItem(\"client_acct_id\", loginModel.user_id);\r\n\r\n          const clientAcctId = localStorage.getItem(\"client_acct_id\");\r\n          if (clientAcctId) {\r\n            this.packageDetailService.GetAcctDetails({ client_acct_id: clientAcctId }).subscribe((res) => {\r\n              if (res) {\r\n                localStorage.setItem(\"first_name\", res.first_name);\r\n                localStorage.setItem(\"last_name\", res.last_name);\r\n                localStorage.setItem(\"email\", res.email);\r\n\r\n                this.navigate(result);\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            this.navigate(result);\r\n          }\r\n\r\n        } else {\r\n          let statusData: StatusDTO = {\r\n            title: 'Invalid User id or password!',\r\n            details: 'Entered userid or password is invalid.',\r\n            stepSuccessful: false\r\n          }\r\n\r\n          let ref = this.dialog.open(StepCompletionStatusComponent,\r\n            { height: '48vh', width: '42vw', data: statusData });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  navigate(result: any) {\r\n    // For admin case\r\n    if (result.isAdmin) {\r\n      localStorage.setItem(\"is_admin\", \"yes\");\r\n    }\r\n\r\n    // route to next URL TODO:\r\n    if (result.isAdmin) {\r\n      this.loginService.setAdminStorage({admin:true});\r\n      this.router.navigate([\"Admin/ChangeConfig\"]);\r\n    } else {\r\n      this.router.navigate([\"CustomerPortal/manage-subscription\"]);\r\n    }\r\n  }\r\n}\r\n","<div class=\"card login-screen\">\r\n    <div class=\"card-header\">\r\n        Login\r\n    </div>\r\n    <div class=\"card-data-container\">\r\n        <div class=\"card-data-main-container\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" >\r\n                <div *ngIf=\"checkFormValidation()\" class=\"Error full-width\">\r\n                    *Please fill required fields!\r\n                </div>\r\n                <mat-form-field class=\"custom-mat-input m-field\" appearance=\"outline\">\r\n                    <input matInput placeholder=\"User id\" class=\"input-text\" formControlName=\"user_id\">\r\n                </mat-form-field>\r\n            \r\n                <mat-form-field class=\"custom-mat-input m-field\" appearance=\"outline\">\r\n                    <input matInput placeholder=\"Password\" type=\"password\" class=\"input-text\" formControlName=\"password\">\r\n                </mat-form-field>\r\n                <div class=\"\">\r\n                    <a [routerLink]=\"'/ForgotPassword'\">ForgotPassword?</a>\r\n                </div>\r\n            \r\n                <div class=\"btn-container\">\r\n                    <button mat-stroked-button color=\"primary\" class=\"cancel-button\" [routerLink]=\"'/Register'\">Register</button>\r\n                    <button mat-stroked-button color=\"primary\" class=\"confirm-button\" type=\"submit\">Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    \r\n\r\n    <!-- <button mat-stroked-button color=\"primary\" class=\"cancel-button\" (click)=\"logout()\">logout</button> -->\r\n    \r\n</div>"],"sourceRoot":"webpack:///"}